!function(){"use strict";angular.module("app.file").factory("fileLoader",["$http","$q","$log","constants",function(e,a,l,s){return{loadFile:function(e,t){var r=a.defer();if(Utilities.isUndefinedOrNull(e)||Utilities.isUndefinedOrNull(t)&&t!==s.FILE.ORIGIN.HTML5&&t!==s.FILE.ORIGIN.LOCAL_PATH)return r.reject(String.format("fileLoader.loadFile(): Invalid argument: fileInfo: {0}, fileOrigin: {1}",JSON.stringify(e),t)),r.promise;if(t===s.FILE.ORIGIN.HTML5){if(e.size>s.FILE.MAX_SIZE_BYTE_LIMIT)return l.info(String.format("fileLoader.loadFile(): Attempt to upload file with size exceeding limit - {0} bytes",e.size)),r.reject(s.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED),r.promise;(function(e){var t=a.defer();if(Utilities.isUndefinedOrNull(s.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(e.name)]))return t.reject(s.FILE.ERROR.UNSUPPORTED_FILE_TYPE),t.promise;var r=new FileReader,i={};return i.name=encodeURI(e.name),r.onload=function(){i.content=new Int8Array(r.result),t.resolve(i)},r.readAsArrayBuffer(e),t.promise})(e).then(function(e){r.resolve(e)},function(e){r.reject(e)})}else(i=e,n=a.defer(),o=new XMLHttpRequest,o.open("GET",i,!0),o.responseType="arraybuffer",o.onreadystatechange=function(){if(4===o.readyState){if(200!==o.status&&0!==o.status)return l.error(String.format("fileLoader.loadFileFromPath(): XMLHttpRequestError at method loadFileFromPath - {0}",o.status)),n.reject(s.FILE.ERROR.LOAD_FROM_PATH),n.promise;var e={};e.content=o.response,e.name=i.replace(/^.*[\\\/]/,""),n.resolve(e)}},o.send(null),n.promise).then(function(e){e.content.byteLength>s.FILE.MAX_SIZE_BYTE_LIMIT&&(l.info(String.format("fileLoader.loadFile(): Attempt to upload file with size exceeding limit - {0} bytes",e.content.byteLength)),r.reject(s.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED)),r.resolve(e)},function(e){r.reject(e)});var i,n,o;return r.promise}}}])}();