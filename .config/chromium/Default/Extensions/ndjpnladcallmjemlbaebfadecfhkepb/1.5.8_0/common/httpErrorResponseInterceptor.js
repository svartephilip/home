!function(){"use strict";angular.module("app.common").factory("httpErrorResponseInterceptor",["$q","$log","$timeout","$injector","constants",function(r,e,o,n,i){var s=0;return{responseError:function(t){if(t)switch(t.status){case 0:e.debug(String.format("httpErrorResponseInterceptor - Request cancelled - {0}",t.config.url));break;case 401:e.info(String.format("httpErrorResponseInterceptor - {0} - {1} - {2}",t.status,t.config.url,JSON.stringify(t.data)));break;case 400:if(Utilities.isNotUndefinedOrNull(t.data)&&Utilities.isNotUndefinedOrNull(t.data.error_codes)&&50001===t.data.error_codes[0]){e.info(String.format("httpErrorResponseInterceptor -  Invalid AADSerivce - {0} - {1}",t.status,JSON.stringify(t.data)));break}if(Utilities.isNotUndefinedOrNull(t.data)&&Utilities.isNotUndefinedOrNull(t.data.error_codes)&&50079===t.data.error_codes[0]){if(e.info(String.format("httpErrorResponseInterceptor -  Interaction required - {0} - {1}",t.status,JSON.stringify(t.data))),s<i.ERROR_RETRIES.HTTP_REQUEST)return s++,o(function(){var r=n.get("$http");return r(t.config)},i.TIMEOUT.USER_INFO_LOOKUP);s=0}e.error(String.format("httpErrorResponseInterceptor - {0} - {1} - {2}",t.status,t.config.url,JSON.stringify(t.data)));break;default:e.error(String.format("httpErrorResponseInterceptor - {0} - {1} - {2}",t.status,t.config.url,JSON.stringify(t.data)))}return r.reject(t)}}}])}();